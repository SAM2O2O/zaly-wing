syntax = "proto3";

// 用于描述整个体系中基础、共用的数据结构。
// 原则1：网络通讯设计的各类用语，以客户端为中心。
package core;

option java_package = "com.akaxin.zaly.proto";
option java_outer_classname = "CoreProto";

//请求的Errinfo
message ErrorInfo {
	string code = 1;
	string info = 2;
}

//传输的数据体
message TransportPackageData {
	//错误信息，如果err不为null，data很有可能是无用的。
    ErrorInfo err = 1;

    //业务Data，由业务逻辑自己解析
    bytes data = 2;

    //非业务逻辑的必要数据
    // 分为两个级别：Socket级 与 Request级
    // Socket级：只在链接建立后的第一个请求中传递，在链接的整个生命周期都有效。
    // Request级：在每一次请求中都可能会变化并传递。
    map<int32, string> header = 3;
}

enum HeaderKey {
//0-500 分配给CLIENT
	CLIENT_VERSION = 0; //0.3.2
	CLIENT_SESSION_ID = 1;
	CLIENT_LANGUAGE = 2; // 客户端正在使用的语言, cn/en
	CLIENT_SOCKET_TYPE = 3;

	//501-1000 分配给CLIENT_REQUEST
	CLIENT_REQUEST_REFERER = 501;
	CLIENT_REQUEST_SERVER_HOST = 502; //客户端访问的服务host
	CLIENT_REQUEST_SERVER_PORT = 503; //客户端访问的服务port

	//1001-2000 分配给SERVER
	SERVER_VERSION = 1001; //服务端地址
	SERVER_HOST = 1002; //服务端host
	SERVER_PORT = 1003; //服务端port
}
